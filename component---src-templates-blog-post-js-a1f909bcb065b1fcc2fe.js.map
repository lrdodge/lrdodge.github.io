{"version":3,"file":"component---src-templates-blog-post-js-a1f909bcb065b1fcc2fe.js","mappings":"gOAuCA,MAnCkB,KAAO,IAAD,EACtB,MAcMA,EAA+B,QAAzB,GAdCC,EAAAA,EAAAA,gBAAe,cAcRC,KAAKC,oBAAY,aAAtB,EAAwBH,OAEvC,OACE,uBAAKI,UAAU,OACb,gBAAC,IAAM,OACNJ,aAAM,EAANA,EAAQK,OACP,yBACE,8BAAQ,+DACR,2BAAK,6GAEL,qBAAGC,KAAI,YAAaN,aAAM,EAANA,EAAQO,QACzBP,aAAM,EAANA,EAAQO,OACP,mEAIJ,E,oBC5BV,MAwDaC,EAAO,IAAyC,IAAtCC,MAAQC,eAAgBC,IAAQ,EACrD,OACE,gBAAC,IAAG,CACFC,MAAOD,EAAKE,YAAYD,MACxBE,YAAaH,EAAKE,YAAYC,aAAeH,EAAKI,SAClD,EAIN,MAjEyB,IAGlB,IAAD,MAFJN,MAAM,SAAEO,EAAQ,KAAEC,EAAI,KAAEf,EAAMQ,eAAgBC,GAAM,SACpDO,GACD,EACC,MAAMC,GAA6B,QAAjB,EAAAjB,EAAKC,oBAAY,aAAjB,EAAmBS,QAAK,QAE1C,OACE,gBAAC,IAAM,CAACM,SAAUA,EAAUN,MAAOO,GACjC,2BACEf,UAAU,YACVgB,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAYX,EAAKE,YAAYD,OAC1C,yBAAID,EAAKE,YAAYU,OAEvB,2BACEC,wBAAyB,CAAEC,OAAQd,EAAKe,MACxCJ,SAAS,gBAEX,2BACA,8BACE,gBAAC,EAAS,QAGd,uBAAKlB,UAAU,iBACb,sBACEuB,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGhB,GACC,gBAAC,EAAAiB,KAAI,CAACC,GAAIlB,EAASmB,OAAOC,KAAMC,IAAI,QAAO,KACtCrB,EAASH,YAAYD,QAI9B,0BACGK,GACC,gBAAC,EAAAgB,KAAI,CAACC,GAAIjB,EAAKkB,OAAOC,KAAMC,IAAI,QAC7BpB,EAAKJ,YAAYD,MAAM,SAM3B,C","sources":["webpack://luke-dodge-blog/./src/components/contact-me.js","webpack://luke-dodge-blog/./src/templates/blog-post.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Avatar from \"./avatar\"\r\n\r\nconst ContactMe = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query ContactMeQuery {\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            email\r\n            summary\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const author = data.site.siteMetadata?.author\r\n\r\n  return (\r\n    <div className=\"bio\">\r\n      <Avatar />\r\n      {author?.name && (\r\n        <p>\r\n          <strong>Ready to Implement These Ideas at Your Company? Contact Me!</strong>\r\n          <br/>\r\n          {`If you're looking to enhance your engineering leadership strategies, I'm here to help. Connect with me at `}\r\n          <a href={`mailto: ${author?.email}`}>\r\n            {author?.email}\r\n          </a>\r\n          {` for personalized advice to elevate your team and organization.`}\r\n        </p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ContactMe\r\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport ContactMe from \"../components/contact-me\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <ContactMe />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["author","useStaticQuery","site","siteMetadata","className","name","href","email","Head","data","markdownRemark","post","title","frontmatter","description","excerpt","previous","next","location","siteTitle","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}